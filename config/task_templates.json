[
  {
    "id": "sum-of-sales",
    "brief": "Publish a single-page site that fetches data.csv from attachments, sums its sales column, sets the title to \"Sales Summary ${seed}\", displays the total inside #total-sales, and loads Bootstrap 5 from jsdelivr.",
    "attachments": [
      {
        "name": "data.csv",
        "url": "${csv_data_uri}"
      }
    ],
    "checks": [
      "document.title === `Sales Summary ${seed}`",
      "!!document.querySelector(\"link[href*='bootstrap']\")",
      "Math.abs(parseFloat(document.querySelector('#total-sales').textContent) - ${result}) < 0.01"
    ],
    "round2": [
      {
        "brief": "Add a Bootstrap table #product-sales that lists each product with its total sales and keeps #total-sales accurate after render.",
        "checks": [
          "document.querySelectorAll('#product-sales tbody tr').length >= 1",
          "(() => { const rows = [...document.querySelectorAll('#product-sales tbody tr td:last-child')]; const sum = rows.reduce((acc, cell) => acc + parseFloat(cell.textContent), 0); return Math.abs(sum - ${result}) < 0.01; })()"
        ]
      },
      {
        "brief": "Introduce a currency select #currency-picker that converts the computed total using rates.json from attachments and mirrors the active currency inside #total-currency.",
        "attachments": [
          {
            "name": "rates.json",
            "url": "data:application/json;base64,eyJVU0QiOjEsIkVVUiI6MC45MiwiR0JQIjowLjc5LCJKUFU6MTM0LjV9"
          }
        ],
        "checks": [
          "!!document.querySelector('#currency-picker option[value=\"USD\"]')",
          "!!document.querySelector('#total-currency')"
        ]
      },
      {
        "brief": "Allow filtering by region via #region-filter, update #total-sales with the filtered sum, and set data-region on that element to the active choice.",
        "checks": [
          "document.querySelector('#region-filter').tagName === 'SELECT'",
          "document.querySelector('#total-sales').dataset.region !== undefined"
        ]
      }
    ]
  },
  {
    "id": "markdown-to-html",
    "brief": "Publish a static page that converts input.md from attachments to HTML with marked, renders it inside #markdown-output, and loads highlight.js for code blocks.",
    "attachments": [
      {
        "name": "input.md",
        "url": "${markdown_data_uri}"
      }
    ],
    "checks": [
      "!!document.querySelector(\"script[src*='marked']\")",
      "!!document.querySelector(\"script[src*='highlight']\")",
      "document.querySelector('#markdown-output').innerHTML.includes('<h')"
    ],
    "round2": [
      {
        "brief": "Add tabs #markdown-tabs that switch between rendered HTML in #markdown-output and the original Markdown in #markdown-source while keeping content in sync.",
        "checks": [
          "document.querySelectorAll('#markdown-tabs button').length >= 2",
          "document.querySelector('#markdown-source').textContent.trim().length > 0"
        ]
      },
      {
        "brief": "Support loading Markdown from a ?url= parameter when present and fall back to the attachment otherwise, showing the active source in #markdown-source-label.",
        "checks": [
          "document.querySelector('#markdown-source-label').textContent.length > 0",
          "!!document.querySelector('script').textContent.includes('fetch(')"
        ]
      },
      {
        "brief": "Display a live word count badge #markdown-word-count that updates after every render and formats numbers with Intl.NumberFormat.",
        "checks": [
          "document.querySelector('#markdown-word-count').textContent.includes(',')",
          "!!document.querySelector('script').textContent.includes('Intl.NumberFormat')"
        ]
      }
    ]
  },
  {
    "id": "github-user-created",
    "brief": "Publish a Bootstrap page with form id=\"github-user-${seed}\" that fetches a GitHub username, optionally uses ?token=, and displays the account creation date in YYYY-MM-DD UTC inside #github-created-at.",
    "attachments": [],
    "checks": [
      "document.querySelector('#github-user-${seed}').tagName === 'FORM'",
      "document.querySelector('#github-created-at').textContent.includes('20')",
      "!!document.querySelector('script').textContent.includes('https://api.github.com/users/')"
    ],
    "round2": [
      {
        "brief": "Show an aria-live alert #github-status that reports when a lookup starts, succeeds, or fails.",
        "checks": [
          "document.querySelector('#github-status').getAttribute('aria-live') === 'polite'",
          "!!document.querySelector('script').textContent.includes('github-status')"
        ]
      },
      {
        "brief": "Display the account age in whole years inside #github-account-age alongside the creation date.",
        "checks": [
          "parseInt(document.querySelector('#github-account-age').textContent, 10) >= 0",
          "document.querySelector('#github-account-age').textContent.toLowerCase().includes('years')"
        ]
      },
      {
        "brief": "Cache the last successful lookup in localStorage under \"github-user-${seed}\" and repopulate the form on load.",
        "checks": [
          "!!document.querySelector('script').textContent.includes('localStorage.setItem(\"github-user-${seed}\"')",
          "!!document.querySelector('script').textContent.includes('localStorage.getItem(\"github-user-${seed}\"')"
        ]
      }
    ]
  }
]
